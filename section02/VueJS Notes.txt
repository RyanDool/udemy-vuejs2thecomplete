VueJS Notes


Section 2 Lecture 12-13
You can NOT use curly braces in ANY html attributes. 
CURLY BRACES CAN ONLY BE USED WHERE TEXT IS PLACED
For html attributes use v-bind e.q.
<a v-bind:href="link">{{ linkText }}</a>
That data being bound are stored in the VueJs instance 


Section 2 Lecture 14
If you wish to use the first iteration of data that later changes in the instance use
v-once, this will use the intial value.


Section 2 Lecture 15
VueJs ESCAPES html elements, to prevent cross-site scripting attacks. so you cannot pass html through as a data value. 
Instead use a directive!
v-html
<p v-html="htmlLink"></p>
NOTE: use v-html carefully, if it is passing data from a user interaction it opens up the possibility of cross-site attacks.


Section 2 Lecture 16
Use directive v-on to allow user interaction for instance something happens onClick 
<button v-on:click="someFunction">Click This Button</button>


Section 2 Lecture 18
$event is a built in event object, DO NOT overwrite or change it. example: 
<button v-on:click="increase(2, $event)">Click Me</button>
You can pass $event through to be used in the function if needed.


Section 2 Lecture 19
can use .stop to stop propagation instead of stopPropagation something like this...
<p v-on:mousemove="updateCoords">
	Coordinates: {{x}} / {{y}}
	- <span v-on:mousemove.stop="">DEAD SPOT</span>
</p>
v-on:mousemove.stop="" will stop the function from running for that element.
CAN ALSO USE .prevent to prevent propagation OR even chain them together lik so...
<span v-on:mousemove.stop.prevent="">DEAD SPOT</span>


Section 2 Lecture 20 - KEY MODIFIERS
key modifer similar to event modifiers, just append the key to the key event like so....
<input type="text" v-on:keyup.enter="alertMe">


Section 2 Lecture 21 - WRITING JAVASCRIPT IN TEMPLATES
Can write simple valid javascript expressions (no if's, else's, loops, etc.) such as:
<button v-on:click="counter++">Click Me</button> 
*NOTE YOU CAN DO TERNARY EXPRESSIONS*
<p>{{ counter * 2 > 10 ? 'Greater than 10' : 'Smaller than 10' }}</p>
*NOTE CANNOT USE STATEMENTS*
<p>{{ var a = 1 }}</p>


Section 2 Lecture 22 - TWO-WAY-BINDING
Use the v-model attribute with the property you wish to bind. 
	<div id="app">
		<input type="text" v-model="name">
		<p>{{ name }}</p>
	</div>
	<script>
		new Vue({
			el: "#app",
			data: {
				name: Ryan
			}
		});
	</script>


Section 2 Lecture 23 - REACTING TO CHANGES WITH COMPUTED PROPERTIES








